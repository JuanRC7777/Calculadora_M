package com.mycompany.calculadora_m;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class MatrizInputFrame extends javax.swing.JFrame {
    private int filas;
    private int columnas;
    private JTextField[][] coeficientes;
    private JTextField[] independientes;

    public MatrizInputFrame(int filas, int columnas) {
        this.filas = filas;
        this.columnas = columnas;

        setTitle("Ingresar sistema de ecuaciones");
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLayout(new BorderLayout());

        coeficientes = new JTextField[filas][columnas];
        independientes = new JTextField[filas];
        JPanel panelEcuaciones = new JPanel(new GridLayout(filas, columnas * 3 + 2, 5, 5)); 

        for (int i = 0; i < filas; i++) {
            for (int j = 0; j < columnas; j++) {
                coeficientes[i][j] = new JTextField(3);
                panelEcuaciones.add(coeficientes[i][j]);

                JLabel variable = new JLabel("x" + (j + 1));
                panelEcuaciones.add(variable);

                if (j < columnas - 1) {
                    panelEcuaciones.add(new JLabel("+"));
                } else {
                    panelEcuaciones.add(new JLabel(" "));
                }
            }
            panelEcuaciones.add(new JLabel("="));
            independientes[i] = new JTextField(3);
            panelEcuaciones.add(independientes[i]);
        }
        JButton btnResolver = new JButton("Resolver");
        btnResolver.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                double[][] matriz = new double[filas][columnas + 1];

                try {
                    for (int i = 0; i < filas; i++) {
                        for (int j = 0; j < columnas; j++) {
                            matriz[i][j] = Double.parseDouble(coeficientes[i][j].getText());
                        }
                        matriz[i][columnas] = Double.parseDouble(independientes[i].getText());
                    }

                    dispose(); // Cierra esta ventana
                    new ResultadoFrame(matriz); // Abre ventana de resultados

                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Por favor, ingresa solo numeros validos.");
                }
            }
        });

        add(panelEcuaciones, BorderLayout.CENTER);
        add(btnResolver, BorderLayout.SOUTH);

        pack();
        setLocationRelativeTo(null);
        setVisible(true);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatrizInputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatrizInputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatrizInputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatrizInputFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatrizInputFrame(2,2).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
